// Don't redirect on network errors, show dashboard anyway for demo
            this.showDemoContent();
        }
    }

    async loadCSRFToken() {
        try {
            const response = await fetch('https://cook.beaverlyai.com/api/csrf_token', {
                method: 'GET',
                credentials: 'include',
                headers: {
                    'X-Requested-With': 'XMLHttpRequest'
                }
            });

            if (response.ok) {
                const data = await response.json();
                this.csrfToken = data.csrf_token;
            }
        } catch (error) {
            console.error('Failed to load CSRF token:', error);
        }
    }

    redirectToLogin() {
        window.location.href = 'index.html';
    }

    updateUserInterface() {
        this.updateUserInfo();
        this.updateVerificationStatus();
        this.updateBrokerConnection();
        this.updatePlanStatus();
        this.showDashboardContent();
    }

    showDemoContent() {
        // Show demo content when API is unavailable
        this.currentUser = {
            email: 'demo@example.com',
            full_name: 'Demo User',
            email_verified: false,
            broker_connected: false,
            plan: "chilla's gift"
        };
        this.updateUserInterface();
    }

    showDashboardContent() {
        const dashboard = document.getElementById('dashboard');
        if (dashboard) {
            dashboard.style.display = 'block';
            dashboard.style.opacity = '1';
        }
        
        // Ensure main content is visible
        const mainContent = document.querySelector('.main-content');
        if (mainContent) {
            mainContent.style.display = 'block';
        }
    }

    updateUserInfo() {
        const userEmailElement = document.querySelector('.user-email');
        const userNameElement = document.querySelector('.user-name');
        const userDisplayEmail = document.getElementById('user-display-email');
        const userDisplayName = document.getElementById('user-display-name');

        if (userEmailElement) userEmailElement.textContent = this.currentUser?.email || 'N/A';
        if (userNameElement) userNameElement.textContent = this.currentUser?.full_name || 'User';
        if (userDisplayEmail) userDisplayEmail.textContent = this.currentUser?.email || 'N/A';
        if (userDisplayName) userDisplayName.textContent = this.currentUser?.full_name || 'User';